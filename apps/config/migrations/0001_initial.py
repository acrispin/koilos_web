# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-30 04:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('person', '0001_initial'),
        ('motor', '0001_initial'),
        ('machine', '0001_initial'),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('idCheckList', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(default='A', max_length=3)),
                ('regDate', models.DateTimeField(auto_now_add=True, db_column='reg_date', null=True)),
                ('regUser', models.CharField(blank=True, db_column='reg_user', default='admin', max_length=30, null=True)),
                ('modDate', models.DateTimeField(auto_now=True, db_column='mod_date', null=True)),
                ('modUser', models.CharField(blank=True, db_column='mod_user', default='admin', max_length=30, null=True)),
                ('idCategory', models.ForeignKey(db_column='idCategory', on_delete=django.db.models.deletion.CASCADE, to='general.Category')),
                ('idCriteria', models.ForeignKey(db_column='idCriteria', on_delete=django.db.models.deletion.CASCADE, to='general.Criteria')),
            ],
            options={
                'db_table': 'CheckList',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CheckListResponse',
            fields=[
                ('idCheckListResponse', models.AutoField(primary_key=True, serialize=False)),
                ('observations', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='A', max_length=3)),
                ('regDate', models.DateTimeField(auto_now_add=True, db_column='reg_date', null=True)),
                ('regUser', models.CharField(blank=True, db_column='reg_user', default='admin', max_length=30, null=True)),
                ('modDate', models.DateTimeField(auto_now=True, db_column='mod_date', null=True)),
                ('modUser', models.CharField(blank=True, db_column='mod_user', default='admin', max_length=30, null=True)),
                ('idCategory', models.ForeignKey(db_column='idCategory', on_delete=django.db.models.deletion.CASCADE, to='general.Category')),
            ],
            options={
                'db_table': 'CheckListResponse',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('idConfiguration', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('beginingTotalTime', models.DateTimeField(blank=True, null=True)),
                ('endingTotalTime', models.DateTimeField(blank=True, null=True)),
                ('azimuth', models.IntegerField(blank=True, null=True)),
                ('attitude', models.IntegerField(blank=True, null=True)),
                ('remiShell', models.IntegerField(blank=True, null=True)),
                ('amountPolymer', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('amountBentonite', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('amountBoxes', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('volumeWater', models.IntegerField(blank=True, null=True)),
                ('volumeOil', models.IntegerField(blank=True, null=True)),
                ('initialDepth', models.IntegerField(blank=True, null=True)),
                ('finalDepth', models.IntegerField(blank=True, null=True)),
                ('initialHobbs', models.DateTimeField(blank=True, null=True)),
                ('finalHobbs', models.DateTimeField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='A', max_length=3)),
                ('regDate', models.DateTimeField(auto_now_add=True, db_column='reg_date', null=True)),
                ('regUser', models.CharField(blank=True, db_column='reg_user', default='admin', max_length=30, null=True)),
                ('modDate', models.DateTimeField(auto_now=True, db_column='mod_date', null=True)),
                ('modUser', models.CharField(blank=True, db_column='mod_user', default='admin', max_length=30, null=True)),
                ('idAssistant', models.ForeignKey(db_column='idAssistant', on_delete=django.db.models.deletion.CASCADE, to='person.Assistant')),
                ('idDrillBit', models.ForeignKey(db_column='idDrillBit', on_delete=django.db.models.deletion.CASCADE, to='general.DrillBit')),
                ('idMachine', models.ForeignKey(db_column='idMachine', on_delete=django.db.models.deletion.CASCADE, to='machine.Machine')),
                ('idMotor', models.ForeignKey(db_column='idMotor', on_delete=django.db.models.deletion.CASCADE, to='motor.Motor')),
                ('idPolymer', models.ForeignKey(db_column='idPolymer', on_delete=django.db.models.deletion.CASCADE, to='general.Polymer')),
                ('idSection', models.ForeignKey(db_column='idSection', on_delete=django.db.models.deletion.CASCADE, to='general.Section')),
                ('idSubSection', models.ForeignKey(db_column='idSubSection', on_delete=django.db.models.deletion.CASCADE, to='general.SubSection')),
                ('idWorker', models.ForeignKey(db_column='idWorker', on_delete=django.db.models.deletion.CASCADE, to='person.Worker')),
            ],
            options={
                'db_table': 'Configuration',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Interval',
            fields=[
                ('idInterval', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('initialTime', models.DateTimeField(blank=True, null=True)),
                ('endingTime', models.DateTimeField(blank=True, null=True)),
                ('perforationBegin', models.CharField(blank=True, max_length=100, null=True)),
                ('perforationEnd', models.CharField(blank=True, max_length=100, null=True)),
                ('trueLengthRod', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(default='A', max_length=3)),
                ('regDate', models.DateTimeField(auto_now_add=True, db_column='reg_date', null=True)),
                ('regUser', models.CharField(blank=True, db_column='reg_user', default='admin', max_length=30, null=True)),
                ('modDate', models.DateTimeField(auto_now=True, db_column='mod_date', null=True)),
                ('modUser', models.CharField(blank=True, db_column='mod_user', default='admin', max_length=30, null=True)),
                ('idConfiguration', models.ForeignKey(db_column='idConfiguration', on_delete=django.db.models.deletion.CASCADE, to='config.Configuration')),
            ],
            options={
                'db_table': 'Interval',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='checklistresponse',
            name='idConfiguration',
            field=models.ForeignKey(db_column='idConfiguration', on_delete=django.db.models.deletion.CASCADE, to='config.Configuration'),
        ),
        migrations.AddField(
            model_name='checklistresponse',
            name='idCriteria',
            field=models.ForeignKey(db_column='idCriteria', on_delete=django.db.models.deletion.CASCADE, to='general.Criteria'),
        ),
        migrations.AddField(
            model_name='checklistresponse',
            name='idState',
            field=models.ForeignKey(db_column='idState', on_delete=django.db.models.deletion.CASCADE, to='general.State'),
        ),
        migrations.AlterUniqueTogether(
            name='checklistresponse',
            unique_together=set([('idConfiguration', 'idCategory', 'idCriteria', 'idState')]),
        ),
        migrations.AlterUniqueTogether(
            name='checklist',
            unique_together=set([('idCategory', 'idCriteria')]),
        ),
    ]
